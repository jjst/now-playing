# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from api.models.base_model_ import Model
from api import util


class NowPlaying(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, title: str=None, type: str=None):  # noqa: E501
        """NowPlaying - a model defined in Swagger

        :param title: The title of this NowPlaying.  # noqa: E501
        :type title: str
        :param type: The type of this NowPlaying.  # noqa: E501
        :type type: str
        """
        self.swagger_types = {
            'title': str,
            'type': str
        }

        self.attribute_map = {
            'title': 'title',
            'type': 'type'
        }

        self._title = title
        self._type = type

    @classmethod
    def from_dict(cls, dikt) -> 'NowPlaying':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The NowPlaying of this NowPlaying.  # noqa: E501
        :rtype: NowPlaying
        """
        return util.deserialize_model(dikt, cls)

    @property
    def title(self) -> str:
        """Gets the title of this NowPlaying.


        :return: The title of this NowPlaying.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title: str):
        """Sets the title of this NowPlaying.


        :param title: The title of this NowPlaying.
        :type title: str
        """

        self._title = title

    @property
    def type(self) -> str:
        """Gets the type of this NowPlaying.


        :return: The type of this NowPlaying.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type: str):
        """Sets the type of this NowPlaying.


        :param type: The type of this NowPlaying.
        :type type: str
        """

        self._type = type
